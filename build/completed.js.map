{"version":3,"sources":["completed.es6.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;kBAUe,UAAS,UAAT,EAAqB;AAClC,SAAO;AACL,SADK,iBACC,QADD,EACW;AACd,eAAS,OAAT,GAAmB;AACjB,eAAO,KAAK,KAAL,CAAW,aAAG,YAAH,CAAgB,YAAY,eAA5B,CAAX,CAAP;AACD;;AAED,eAAS,WAAT,CAAqB,MAArB,EAA6B;AAC3B,YAAM,KAAK,EAAX;;AAEA,+BAAQ,sBAAc,MAAd,CAAR,EAA+B,OAA/B,CAAuC,gBAAQ;AAAA,4BACxB,KAAK,KAAL,CAAW,GAAX,CADwB;AAAA;AAAA,cACtC,IADsC;AAAA,cAChC,IADgC;;AAE7C,aAAG,IAAH,IAAW,OAAO,IAAP,GAAc,EAAzB;AACD,SAHD;AAIA,eAAO,EAAP;AACD;;AAED,eAAS,MAAT,CAAgB,MAAhB;AAAA,4FAAwB,iBAAe,IAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iCACc,KAAK,MAAL,CAAY;AAC9C,0BAAM;AADwC,mBAAZ,CADd,EACd,IADc,gBACd,IADc,EACR,iBADQ,gBACR,iBADQ;AAKhB,2BALgB,GAKJ,YAAY,iBAAZ,CALI,EAMpB,OANoB,GAMV,yBACR,UADQ,EAER,WAAW,GAAX,CAAe;AAAA,2BAAS,UAAU,KAAV,CAAT;AAAA,mBAAf,CAFQ,CANU;;;AAWtB,kCACG,IADH,CACQ,mDADR;AAEI;AAFJ,qBAGO,OAHP,GAKG,IALH,CAKQ,YAAW;AACf,4BAAQ,GAAR,CAAY,mCAAZ;AACA,4BAAQ,GAAR,CAAY,OAAZ;AACD,mBARH,EASG,KATH,CASS,UAAS,GAAT,EAAc;AACnB,4BAAQ,GAAR,CAAY,IAAI,OAAhB;AACD,mBAXH;;AAXsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAxB;;AAAA;AAAA;AAAA;AAAA;AAwBD;AAxCI,GAAP;AA0CD,C;;AArDD;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAJA;AAMA,IAAM,WAAW,eAAK,IAAL,CAAU,SAAV,EAAqB,YAArB,CAAjB;AAAA,IACE,YAAY,+BADd","file":"completed.js","sourcesContent":["import axios from \"axios\";\n// import PromiseSftp from 'promise-sftp'\nimport path from \"path\";\nimport fs from \"fs\";\nimport flatten from \"lodash/flatten\";\nimport zipObject from \"lodash/zipObject\";\n\nconst localDir = path.join(__dirname, \"../assets/\"),\n  remoteDir = \"/home/phong/api.v1/vaithuhay/\";\n\nexport default function(mainAssets) {\n  return {\n    apply(compiler) {\n      function readOld() {\n        return JSON.parse(fs.readFileSync(__dirname + \"/current.json\"));\n      }\n\n      function readCurrent(assets) {\n        const rs = {};\n\n        flatten(Object.values(assets)).forEach(item => {\n          const [file, hash] = item.split(\"?\");\n          rs[file] = hash ? hash : \"\";\n        });\n        return rs;\n      }\n\n      compiler.plugin(\"done\", async function(stat) {\n        const { hash, assetsByChunkName } = stat.toJson({\n          hash: true\n        });\n\n        const newAssets = readCurrent(assetsByChunkName),\n          postObj = zipObject(\n            mainAssets,\n            mainAssets.map(asset => newAssets[asset])\n          );\n\n        axios\n          .post(\"https://server.vaithuhay.com/b/meta?key=assetHash\", {\n            hash,\n            ...postObj\n          })\n          .then(function() {\n            console.log(\"Resource hash has been updated :)\");\n            console.log(postObj);\n          })\n          .catch(function(err) {\n            console.log(err.message);\n          });\n      });\n    }\n  };\n}\n"]}